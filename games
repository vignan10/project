
            #include<stdio.h>
            #include<dos.h>
            #include<conio.h>
            #include<string.h>
            #include<stdlib.h>
            #include<process.h>
            #include <windows.h>
            #include<time.h>
            #include<ctype.h>
            #define N 9
            #define space ""
             struct games // games
             {int score;
             char name[20];
             int id;
             }b;
            void delay(unsigned int mseconds)
            {
                clock_t goal = mseconds + clock();
                while (goal > clock());
            }
             void gotoxy(int x,int y)
            {
                COORD coord;
                coord.X=x;
                coord.Y=y;
                SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),coord);
            }

            int checkwin(char square[]);//checking function for Tic_tac_toe
            void board(char square[]);//function for displaying board
            int intial_fn()//main function for tic tac toe
            {
            char square[10] = { 'o', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
                int player = 1, i,choice;

                char mark;
                do
                {
                    board(square);
                    player = (player % 2==0) ? 2: 1;
                     printf("\n\n");
                     printf("\t\t");
                      for(i = 0; i < 72; i++)
                    printf("%c", 205);
                    printf("\n\t\t\t\tEnter 0 to exit\n");
                    printf("\t\t\t\tPlayer %d, enter a number:  ", player);
                    scanf("%d", &choice);
                    if(choice == 0)
                      return 0;


                    mark = (player == 1) ? '*' : 'O';

                    if (choice == 1 && square[1] == '1')
                        square[1] = mark;

                    else if (choice == 2 && square[2] == '2')
                        square[2] = mark;

                    else if (choice == 3 && square[3] == '3')
                        square[3] = mark;

                    else if (choice == 4 && square[4] == '4')
                        square[4] = mark;

                    else if (choice == 5 && square[5] == '5')
                        square[5] = mark;

                    else if (choice == 6 && square[6] == '6')
                        square[6] = mark;

                    else if (choice == 7 && square[7] == '7')
                        square[7] = mark;

                    else if (choice == 8 && square[8] == '8')
                        square[8] = mark;

                    else if (choice == 9 && square[9] == '9')
                        square[9] = mark;


                    else
                    {
                        printf("Invalid move ");

                        player--;
                        getch();
                    }
                    i = checkwin(square);

                    player++;
                }while (i ==  - 1);

                board(square);

                if (i == 1){
                    printf("==>\aPlayer %d win ", --player);
                    Sleep(2000);
                    return 0;
                    }
                else{
                    printf("==>\aGame draw");
                    Sleep(2000);
                    return 0;
                }
                return 0;
            }


            int checkwin(char square[])
            {
                if (square[1] == square[2] && square[2] == square[3])
                    return 1;

                else if (square[4] == square[5] && square[5] == square[6])
                    return 1;

                else if (square[7] == square[8] && square[8] == square[9])
                    return 1;

                else if (square[1] == square[4] && square[4] == square[7])
                    return 1;

                else if (square[2] == square[5] && square[5] == square[8])
                    return 1;

                else if (square[3] == square[6] && square[6] == square[9])
                    return 1;

                else if (square[1] == square[5] && square[5] == square[9])
                    return 1;

                else if (square[3] == square[5] && square[5] == square[7])
                    return 1;

                else if (square[1] != '1' && square[2] != '2' && square[3] != '3' &&
                    square[4] != '4' && square[5] != '5' && square[6] != '6' && square[7]
                    != '7' && square[8] != '8' && square[9] != '9')

                    return 0;
                else
                    return  - 1;
            }
            void board(char square[])
            {
                int i;
                system("cls");
                printf("\n\n\t\t\t\tTic Tac Toe\n\n");
               printf("\t\t\t\tPlayer 1 (X)  -  Player 2 (O)\n");
               printf("\t\t");
                 for(i = 0; i < 72; i++)
                {
                    printf("%c", 205);
                }
                printf("\n");
                printf("\t\t\t\t\t     |     |     \n");
                printf("\t\t\t\t\t  %c  |  %c  |  %c \n", square[1], square[2], square[3]);

                printf("\t\t\t\t\t_____|_____|_____\n");
                printf("\t\t\t\t\t     |     |     \n");

                printf("\t\t\t\t\t  %c  |  %c  |  %c \n", square[4], square[5], square[6]);

                printf("\t\t\t\t\t_____|_____|_____\n");
                printf("\t\t\t\t\t     |     |     \n");

                printf("\t\t\t\t\t  %c  |  %c  |  %c \n", square[7], square[8], square[9]);

                printf("\t\t\t\t\t     |     |     \n\n");

            }

            int tic_tac_toe()
            {
                int i, pointer = 1;
            char ch;
            while(1)
                {
               // system("color f0");
                system("cls");
                printf("\n\n\n");
                printf("\t\t\t");
                printf(space "     Tic tac toe\n");
                printf("\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
                if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->play game\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  play game\n\n");
                        }
                        if(pointer == 2)
                        {
                            printf("\t\t\t");
                            printf("\t\t->how to play\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  how to play\n\n");
                        }
                        if(pointer == 3)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n\n\n");
                    printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                intial_fn();
                            }
                            if(pointer == 2)
                            {
                                system("cls");
                                printf("\n\n\n");
                                printf(space"    HOW TO PLAY\n");

                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                printf("\n\n"space"Enter the position number where the place is to be occupied\n\n"
                                       space" Player 1 is denoted by *\n\n"
                                       space" Player 2 is denoted by 0\n\n"
                                       space" Press 0 if you want to exit the game.\n\n");
                                printf("\n\n\n\n\n");
                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                _getch();
                            }
                            if(pointer == 3)
                            {
                                return 0;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 3;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 3)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }
                return 0;
            }
             /** snakenladder  **/
                   int dice;
                   int moves(int);//function to describe moves made by players
                   char arr[100]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
                   int player1_position1=0,player2_position2=0,k=0,temp1=0,temp2=0;
                   void display1()//displaying snake and ladder board
                   {
                       int idx;
                        for(idx=99;idx>=0;idx--)
                     {
                         if((idx+1)%10==0)
                         {
                             printf("\n");
                         }
                         if(idx==temp1-1||idx==temp2-1)
                            printf("%c\t",arr[idx]);
                        else if(arr[idx]<=100&&arr[idx]>0)
                            printf("%d\t",arr[idx]);
                     }
                   }

            void refreshladder(char *arr,char t1,char t2)//refreshing board after every move
            {
                int i=0;
                for(i=0;i<100;i++)
                {
                    if(i==(t1-1)||i==(t2-1));
                    else arr[i]=1+i;
                }
            }

            int GetThePositionOfMovement(int CurrentPosition, int dieValue)//function to move the player when he/she come across snake/ladder
            {
                int Position = CurrentPosition + dieValue;
                if(Position> 100)
                {
                    printf("                             you don't have space           \n");
                       return CurrentPosition;
                }

                 switch(Position)
                 {
                     case 13:
                         printf("               *********congratulations you landed on ladder*********  \n");
                          return 38;
                          break;

                     case 4:
                         printf("               *********congratulations you landed on ladder*********  \n");
                          return 14;
                          break;

                     case 9:
                         printf("               *********congratulations you landed on ladder*********  \n");
                          return 31;
                          break;

                     case 21:
                          printf("               *********congratulations you landed on ladder*********  \n");
                          return 42;
                          break;

                     case 28:
                          printf("               *********congratulations you landed on ladder*********  \n");
                          return 84;
                          break;

                     case 36:
                          printf("               *********congratulations you landed on ladder*********  \n");
                          return 44;
                          break;

                     case 51:
                          printf("               *********congratulations you landed on ladder*********  \n");
                          return 67;
                          break;

                     case 71:
                          printf("               *********congratulations you landed on ladder*********  \n");
                          return 91;
                          break;

                     case 80:
                          printf("               *********congratulations you landed on ladder*********  \n");
                          return 99;
                          break;


                     case 16:
                         printf("               *************bad luck you landed on snake**************   \n");
                          return 6;
                          break;

                     case 47:
                           printf("               *************bad luck you landed on snake**************   \n");
                          return 26;
                          break;

                     case 49:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 11;
                          break;

                     case 56:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 53;
                          break;

                     case 62:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 19;
                          break;

                     case 64:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 60;
                          break;

                     case 87:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 24;
                          break;

                     case 93:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 73;
                          break;

                     case 95:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 75;
                          break;

                     case 99:
                          printf("               *************bad luck you landed on snake**************   \n");
                          return 78;
                          break;

                     default:
                            return  Position;

                 }
            }
              int moves(int value)
                  {
                      int i;
                  if(k%2!=0)
                    {
                       player1_position1=GetThePositionOfMovement(player1_position1,dice);
                         temp1=player1_position1;
                       arr[player1_position1-1]='#';

                    }
                    else
                    {
                        player2_position2=GetThePositionOfMovement(player2_position2,dice);
                        temp2=player2_position2;
                       arr[player2_position2-1]='*';
                    }
                    refreshladder(arr,temp1,temp2);
                if(player1_position1<100&&player2_position2<100)
                {
                for(i = 0; i < 75; i++)
                    {
                        printf("%c", 205);
                    }
                    printf("\n");
                    display1();
                    printf("\n");

                    for(i = 0; i < 75; i++)
                    {
                        printf("%c", 205);
                    }
                    printf("\n");
                    return 1;
                }

                else if(player1_position1==100)
                  {
                    printf("\n\n\t\tplayer1 won\n");
                    system("color 0f");
                    Sleep(2000);
                    player1_position1=0,player2_position2=0,k=0,temp1=0,temp2=0;
                    return -1;
                }
                else if(player2_position2==100)
                        {
                    printf("\n\n\t\tplayer2 won\n");
                    system("color 0f");
                     Sleep(1000);
                    player1_position1=0,player2_position2=0,k=0,temp1=0,temp2=0;
                    return -1;
                }
            }
             int snake(int players)
                   {
                       int flag=0,i;
                     printf("\n");
                     system("cls");
                     srand(time(NULL));
                   do
                   {
                 if(players==2)
                 {
                    printf("\n                        press enter to roll the dice      \n");
                    dice = toupper( getche() );
                    if(dice== 27)
                      return 0;
                 }
                 else if(players==1)
                 {
                    if(flag%2==0)
                        {
                        printf("\n                        press enter to roll the dice      \n");
                        dice = toupper( getche() );
                        if(dice == 27)
                              return 0;

                     }
                    else
                    {
                        printf("\n                        Computer is rolling the dice      \n");
                      Sleep(1000);
                    }
                    flag++;
                 }

                   dice=((rand()%6)+1);
                   system("cls");

                   printf("\n                           dice value for player%d is %d\n",(k++)%2+1,dice);
                   i=moves(dice);
                   printf("\n");
                   printf("                            player1_position1=%d           \n",player1_position1);
                   if(players==2)
                     printf("                            player2_position2=%d            \n",player2_position2);
                    else
                      printf("                            Computer_position=%d            \n",player2_position2);
                   }while(i!=-1);
                   }

            int snakenladder()
            {

            int i, pointer = 1;
            char ch;
            while(1)
                {
              //  system("color f0");
                system("cls");
                printf("\n\n\n");
                printf("\t\t\t");
                printf(space "     SNAKENLADDER\n");
                printf("\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
                        if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Single Player\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Single Player\n\n");
                        }
                        if(pointer == 2)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Two Players\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Two Players\n\n");
                        }

                        if(pointer == 3)
                        {
                            printf("\t\t\t");
                            printf("\t\t->How to play\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  How to play\n\n");
                        }
                        if(pointer == 4)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n\n\n");
                    printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                snake(1);
                            }
                            if(pointer == 2)
                            {
                                snake(2);
                            }
                            if(pointer == 3)
                            {
                                system("cls");
                                printf("\n\n\n");
                                printf(space"    HOW TO PLAY\n");

                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                printf("\n\n"space" Press enter to role the dice\n\n"
                                       space" Player 1 is denoted by #\n\n"
                                       space" Player 2 is denoted by *\n\n"
                                       space" Press Esc if you want to exit the game.\n\n");
                                printf("\n\n\n\n\n");
                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                _getch();
                            }
                            if(pointer == 4)
                            {
                                return 0;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 4;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 4)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }
                return 0;
            }


            /** 15 puzzle **/
            int table[4][4],table2[4][4];
            void moveRight(void);//To move block towards right
            void moveLeft(void);//To move block towards left
            void moveUp(void);//To move block upwards
            void moveDown(void);//To move block downwards

            void displayTable()//for displaying 15-puzzle box
            {
                int i,j;
                printf("\n\n\t\t\t     15PUZZLE\n");
                for(i=0;i<70;i++)
                {
                    printf("%c", 205);
                }
                printf("\n\n\n\t\t\t");
                for(i=0;i<4;i++)
                {
                for(j=0;j<4;j++)
                {   if(table[i][j]==0)
                      printf("%4c",32);
                    else
                    printf("%4d",table[i][j]);
                  }
                printf("\n\n\t\t\t");
              }
              printf("\n");
              for(i=0;i<70;i++)
                    {
                        printf("%c", 205);
                    }
            }

            int movespuzzle()//moving blocks using arrow keys
            {
                system("cls");
                 int key;
                 displayTable();
                printf("\n\nUse arrow keys for moving:\n");
                 key =_getch();
                 printf("%d\n",key);
                 if(key == 77)
                      moveLeft();
                 if(key == 75)
                      moveRight();
                 if(key == 80)
                      moveUp();
                 if(key == 72)
                      moveDown();
                 if(key == 27)
                    return -1;
            return 0;

            }
            void moveRight(){
                int temp,i,j;
                for(i = 0; i < 4; i++){
                    for(j = 0; j < 4; j++){
                        if(table[i][j] == 0 && j != 0){
                            temp = table[i][j-1];
                            table[i][j-1] = 0;
                            table[i][j] = temp;
                        }
                    }
                }
            }
            void moveLeft(){
                int temp,i,j;
                for(i = 3; i >= 0; i--){
                    for(j = 3; j >= 0; j--){
                        if(table[i][j] == 0 && j != 3){
                            temp = table[i][j+1];
                            table[i][j+1] = 0;
                            table[i][j] = temp;
                        }
                    }
                }
            }
            void moveUp(){
                int temp,i,j;
                for(i = 3; i >= 0; i--){
                    for(j = 3; j >= 0; j--){
                        if(table[i][j] == 0 && i != 3){
                            temp = table[i+1][j];
                            table[i+1][j] = 0;
                            table[i][j] = temp;
                        }
                    }
                }
            }
            void moveDown(){
                int temp,i,j;
                for(i = 0; i < 4; i++){
                    for(j = 0; j < 4; j++){
                        if(table[i][j] == 0 && i != 0){
                            temp = table[i-1][j];
                            table[i-1][j] = 0;
                            table[i][j] = temp;
                        }
                    }
                }
            }

            int checkfinish()//To check whether all blocks are arranged in order/not
            {
                  int i,j; int k = 1;
                for (i=0;i<4;i++)
                    for (j=0;j<4;j++)
                        if ((k<4*4)&&(table[i][j]!=k++))
                            return 0;
            return 1;
            }


            void presetup()//random puzzle generator
            {
                int i,j,r,settups[5][4][4]={{{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,0,15}},
                                            {{1,2,3,4},{5,6,7,8},{9,10,11,0},{13,14,15,12}},
                                            {{4,1,15,7},{9,5,2,12},{3,8,10,0},{13,6,11,14}},
                                            {{11,1,8,14},{7,6,4,3},{15,10,2,12},{0,5,13,9}},
                                            {{14,4,2,10},{13,5,0,1},{11,7,8,6},{3,12,9,15}}};
                srand(time(0));
                r=((rand()%5));
                for(i=0;i<4;i++)
                  for(j=0;j<4;j++)
                    table[i][j]=settups[r][i][j];

            }
            void ownsetup()//go with player's setup puzzle
            {
            printf("\nPlease enter the numbers for the top row from left to right and space with 0\n");
            int i,j;
              for(i=0;i<4;i++)
                for(j=0;j<4;j++)
                    scanf("%d",&table[i][j]);
            }


            int puzzle(int ch)
            {

                if(ch==2)
                    ownsetup();
                else if(ch==1)
                    presetup();
                displayTable();
                int count=0;
                while((!checkfinish()))
                {
                    if(movespuzzle()==-1)
                        return 0;
                count++;
                }
                system("cls");
                displayTable();
                printf("\n\t\t*********won the  game*********\n\t\t\twith %d  moves\n",count);
                Sleep(2000);
                return 0;
            }
            int puzzlegame()
            {
              int i,pointer=1;
              char ch;
              while(1)
                {
               // system("color f0");
                system("cls");
                printf("\n\n\n");
                printf("\t\t\t");
                printf(space "     15 PUZZLE\n");
                printf("\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
                if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->play game\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  play game\n\n");
                        }
                        if(pointer == 2)
                        {
                            printf("\t\t\t");
                            printf("\t\t->play with own puzzle\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  play with own puzzle\n\n");
                        }
                        if(pointer == 3)
                        {
                            printf("\t\t\t");
                            printf("\t\t->how to play\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  how to play\n\n");
                        }
                        if(pointer == 4)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n");
                    printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                puzzle(1);
                            }
                            if(pointer == 2)
                            {
                                puzzle(2);
                            }
                            if(pointer == 3)
                            {
                                system("cls");
                                printf("\n\n\n");
                                printf(space"    HOW TO PLAY\n");

                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                printf("\n\n"space"USE arrow keys for moving\n"
                                       space" up arrow to move up\n"
                                       space" down arrow to move down\n"
                                       space" right arrow to move right\n"
                                       space" left arrow to move left\n\n"
                                       space" Press Esc if you want to exit the game.\n\n");
                                printf("\n\n\n");
                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                _getch();
                            }
                            if(pointer == 4)
                            {
                                return 0;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 4;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 4)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }
                return 0;
            }
            /*sudoku*/
            int sudokoarr[N][N];
             int check2(int a[N][N])//Function to check whether all rows are different in their respective columns
             {

            int i,j,sum,temp,flag=1;
                     for(i=0;i<N;i++){
                            sum=0;
                         for(j=0;j<N;j++)
                         {
                             sum=sum+a[i][j];
                         }
                         if(sum==45)
                            flag=1;
                         else
                            flag=0;
             }
            return flag;
             }

             int countzeros(int ary[N][N])//Function to check no of zeros in table to make check2 operation after completing all zeros
             {
                 int i,j,counter=0;

                 for(i=0;i<N;i++){
                    for(j=0;j<N;j++)
                    {
                        if(ary[i][j]==0)
                          counter++;
                    }
                 }
                 return counter;
             }
            int insertcheck(int ary[N][N],int x,int y,int temp)//Function to check whether inserted element is perfect for that row/columns at that instance
            {
            int i=0,j=0;
            for(i=0;i<N;i++)
            {
                if(ary[y][i]==temp)
                 return 0;
            if(ary[i][x]==temp)
                return 0;
            }
            return 1;
            }
            void display_box(int x,int y)//Function to display Sudoku box
            {
                system("cls");
                printf("\n");
                int i,j,count1=0,count2=0;
                printf("\n\n\t\tSudoko\n\n");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n\n\n\t  ");
                for(i=0;i<N;i++)
                {  count1++;
                     if(count1==4)
                    {
                        count1=1;
                        printf("\n\t");
                    }

                    for(j=0;j<N;j++)
                    {
                        count2++;
                        if(count2==4)
                        {
                            count2=1;
                            printf("  ");
                        }
                        if(i==(y)&&j==(x))
                            printf(" [%d]",sudokoarr[i][j]);
                        else{
                            printf("%3d ",sudokoarr[i][j]);
                        }
                    }
                            printf("\n\t");
                }
                printf("\n");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
            }
            void setupsudoko()//Random sudoku puzzle generation function
            {
                int i,j,r,settups[5][N][N]={{{5,3,0, 0,7,0, 0,0,0},
                                            {6,0,0, 1,9,5, 0,0,0},
                                            {0,9,8, 0,0,0, 6,0,0},
                                            {8,0,0, 6,0,0, 0,0,3},
                                            {4,0,0, 8,0,3, 0,0,1},
                                            {7,0,0, 0,2,0, 0,0,6},
                                            {0,6,0, 0,0,0, 2,8,0},
                                            {0,0,0, 4,1,9, 0,0,5},
                                            {0,0,0, 0,8,0, 0,7,9}},
                                            {{4,0,9, 0,0,8, 0,3,0},
                                            {7,5,0, 0,3,2, 0,1,8},
                                            {0,0,0, 5,0,0, 2,0,6},
                                            {8,0,0, 0,0,3, 9,0,0},
                                            {0,3,0, 0,4,0, 0,7,5},
                                            {0,0,1, 2,0,7, 0,0,0},
                                            {0,0,8, 4,0,0, 0,0,9},
                                            {0,1,0, 0,0,9, 0,4,0},
                                            {2,0,0, 7,1,0, 8,5,0}},
                                            {{4,2,9, 1,6,8, 5,3,7},
                                            {7,5,6, 9,3,2, 4,1,8},
                                            {1,8,3, 5,7,4, 2,9,6},
                                            {8,4,7, 6,5,3, 9,2,1},
                                            {9,3,2, 8,4,1, 6,7,5},
                                            {5,6,1, 2,9,7, 3,8,4},
                                            {3,7,8, 4,2,5, 1,6,9},
                                            {6,1,5, 3,8,9, 7,4,2},
                                            {2,9,4, 7,1,0, 8,5,3}}
                                            };

                srand(time(0));
                r=((rand()%3));
                for(i=0;i<N;i++)
                  for(j=0;j<N;j++)
                    sudokoarr[i][j]=settups[r][i][j];
            }
            int movesudoko()//To check whether player had won/not
            {
                int num,temp,ret,k,zeros=0;
                char ch;
                zeros=countzeros(sudokoarr);
                int x_value=0,y_value=0;
                while(1)
                {
                     if(zeros==0)
                     {
                         printf("\n***YOU WON***\n");
                        Sleep(2000);
                         return 1;

                     }
            system("cls");
            display_box(x_value,y_value);

               fflush(stdin);
                ch = _getch();

                    switch(ch)
                    {
                        // Moving box up.
                        case 72 :
                        if(y_value!=0)
                            y_value-=1;
                        break;

                        // Moving box left.
                        case 75 :
                        if(x_value!=0)
                            x_value-=1;
                        break;

                        // Moving box down.
                        case 80 :
                        if(y_value!=N-1)
                            y_value+=1;
                        break;

                        // Moving box right.
                        case 77 :
                        if(x_value!=N-1)
                            x_value+=1;
                        break;
                        case 27 :
                            return 0;
                        case 13 :
                            {
                             printf("Enter the value :");
                             scanf("%d",&temp);
                             ret=insertcheck(sudokoarr,x_value,y_value,temp);
                             if(ret==1)
                               {if(sudokoarr[y_value][x_value]==0)
                                   zeros--;
                                   sudokoarr[y_value][x_value]=temp;
                               }
                             else{
                                printf("Cant be entered(Press Enter)\n");
                                 getch();
                                 }
                            }
                        break;
                    }
            }
            }
            int sudoko()
            {
            setupsudoko();
            if(movesudoko()==1)
            {
                printf("\ncompleted successfully\n");
            }
            return 0;
            }
            int sudokomenu()
            {
                int i, pointer = 1;
            char ch;
            while(1)
                {
               // system("color f0");
                system("cls");
                printf("\n\n\n");
                 printf("\t\t\t");
                printf(space "     Sudoko\n");
                printf("\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
                if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->play game\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  play game\n\n");
                        }
                        if(pointer == 2)
                        {
                            printf("\t\t\t");
                            printf("\t\t->how to play\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  how to play\n\n");
                        }
                        if(pointer == 3)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n");
                    printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                sudoko();
                            }
                            if(pointer == 2)
                            {
                                system("cls");
                                printf("\n\n\n");
                                printf(space"    HOW TO PLAY\n");

                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                printf("\n\n"space"Move the arrow keys to travel through the boxes\n\n"
                                       space"- To insert a value press Enter on the choosen place\n\n"
                                       space" ---Enter the value and press Enter again\n\n"
                                       space" Press Esc to exit\n\n");
                                printf("\n\n\n\n");
                                for(i = 0; i < 72; i++)
                                {
                                    printf("%c", 205);
                                }
                                _getch();
                            }
                            if(pointer == 3)
                            {
                                return 0;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 3;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 3)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }
                return 0;
            }

            int gamesmenudisplay()
            {
            int i, pointer = 1;
            char ch;
            while(1)
                {
               // system("color f0");
                system("cls");
                printf("\n\n\n");
                printf("\t\t\t\t\t\t");
                printf(space"    GAMES MENU\n");
                  printf("\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c", 205);
                }
                printf("\n\n");
                        if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Snake and ladder\n\n");
                        }
                        else
                        {
                              printf("\t\t\t");
                            printf(space"  Snake and ladder\n\n");
                        }
                        if(pointer == 2)
                        {
                              printf("\t\t\t");
                            printf("\t\t->Tic tac toe\n\n");
                        }
                        else
                        {
                              printf("\t\t\t");
                            printf(space"  Tic tac toe\n\n");
                        }
                        if(pointer == 3)
                        {
                              printf("\t\t\t");
                            printf("\t\t->15 puzzle\n\n");
                        }
                        else
                        {
                              printf("\t\t\t");
                            printf(space"  15 puzzle\n\n");
                        }
                         if(pointer == 4)
                        {
                              printf("\t\t\t");
                            printf("\t\t->Sudoko\n\n");
                        }
                        else
                        {
                              printf("\t\t\t");
                            printf(space"  Sudoko\n\n");
                        }

                        if(pointer == 5)
                        {
                              printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                              printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n");
                      printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                snakenladder();
                            }
                            if(pointer == 2)
                            {
                                tic_tac_toe();

                            }
                            if(pointer == 3)
                            {
                                puzzlegame();

                            }
                            if(pointer == 4)
                            {
                                sudokomenu();
                            }
                            if(pointer == 5)
                            {
                                return 0;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 5;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 5)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }
                return 0;
            }

            void login()
            {
                int i, pointer = 1;
            char ch;
             int x=0;
            while (!kbhit())
            {
            system("cls");
            gotoxy(x, 12);
            printf("Welcome To World Of Games");
            delay(100);//delay the control flow
            x++;
            if(x>40)
                break;
            }
            while(1)
                {
               // system("color f0");
                system("cls");
                printf("\n\n\n");
                 printf("\t\t\t");
                 printf("\n\n\t\t\t\t Welcome to games section..\n\n\n\t\t\t Please select your appropriate option...");
                printf("\n\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
                if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Sign_Up\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Sign_Up\n\n");
                        }
                        if(pointer == 2)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Login\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Login\n\n");
                        }
                        if(pointer == 3)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n");
                    printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                {FILE*ff;
                  ff=fopen("user.txt","a");
                  fflush(stdin);
                   system("cls");
                  printf("\n\t\t\t  Please enter your name :");
                  gets(b.name);
                  fflush(stdin);
                  printf("\n\t\t\t Welcome %s, please enter a suitable id number : ",b.name);
                  scanf("%d",&b.id);
                  system("cls");
                  printf("\n\t\t\t Congratulations... Your account has been created.\n\t\t\tTo get into your account please login...");
                  fwrite(&b,sizeof(b),1,ff);
                  fclose(ff);
                  getch();
                  fflush(stdin);
                  }
                            }
                            if(pointer == 2)
                            {
                                {     int num,count=0,n,ch,flag;
              int a,c,t;
              float amount,value,temp;
              FILE *fp;
               fflush(stdin);
               printf("\n\n\t\t\t Please Enter your id Number : ");
               scanf("%d",&num);
               fp=fopen("user.txt","r+");
               rewind(fp);
               while(!feof(fp)&&count==0)
              { fread(&b,sizeof(b),1,fp);
               if (b.id==num)
               {  count=1;  }   }
               if(count==0)
               {     printf("\n\t\t\t Wrong id number... No such user");
               getch();
              }
              else
               {     int i, pointer = 1;
            char ch;
            while(1)
                {
               // system("color f0");
                system("cls");
                printf("\n\n\n");
                printf("\t\t\t");
                printf("\n\t\t\t Welcome %s, options provided to you\n\n",b.name);
                printf("\t\t\t");
                for(i = 0; i < 72; i++)
                {
                    printf("%c",205);
                }
                printf("\n");
                if(pointer == 1)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Display games and play\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Display games and play\n\n");
                        }
                        if(pointer == 2)
                        {
                            printf("\t\t\t");
                            printf("\t\t->View Details\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  View Details\n\n");
                        }
                        if(pointer == 3)
                        {
                            printf("\t\t\t");
                            printf("\t\t->Exit\n\n");
                        }
                        else
                        {
                            printf("\t\t\t");
                            printf(space"  Exit\n\n");
                        }
                    printf("\n\n");
                    printf("\t\t\t");
                    for(i = 0; i < 72; i++)
                    {
                        printf("%c", 205);
                    }
                    fflush(stdin);
                    ch = _getch();
                    if(ch == 13)
                    {
                            if(pointer == 1)
                            {
                                 {
                   fflush(stdin);
                if(!gamesmenudisplay())return;
                n=sizeof(b);
                fseek(fp,-n,SEEK_CUR);
                fwrite(&b,n,1,fp);
                fclose(fp);
                getch();
                }
                            }
                            if(pointer == 2)
                            {
                                { fflush(stdin);
                printf("\n\t\t\t Your Account Details are as follows...");
                printf("\n\n\t\t\t Name : %s",b.name);
                printf("\n\n\t\t\t id Number : %d ",b.id);
                fclose(fp);
                Sleep(1000);
                system("cls");
                printf("\n\t\t\t Press any key to continue...");
                getch();
                }
                            }
                            if(pointer == 3)
                            {
                                return;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 3;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 3)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }

            }
     }
                            }
                            if(pointer == 3)
                            {
                                return;
                            }
                    }
                    if(ch == -32)
                    {
                        switch(_getch())
                        {
                            case 72 :
                                if(pointer == 1)
                                {
                                    pointer = 3;
                                }
                                else
                                {
                                    pointer--;
                                }
                            break;

                            case 80 :
                                if(pointer == 3)
                                {
                                    pointer = 1;
                                }
                                else
                                {
                                    pointer++;
                                }
                            break;
                        }
                    }

                }
                return;
            }



            void main()
            {
                int r,q;
                gotoxy(42,15);
                printf("Loading...");
                gotoxy(42,16);
                for(r=1;r<=15;r++)
                {
                        printf("%c",177);
                        Sleep(500);
                }
                gotoxy(92,36);
                system("cls");
                printf("\n\n");
                login();
                system("cls");
                gotoxy(30,15);
                printf("****Thank You****");
                Sleep(500);
                system("cls");

            }
